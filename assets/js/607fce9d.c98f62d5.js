"use strict";(self.webpackChunksfit_delivery_knowledge_hub=self.webpackChunksfit_delivery_knowledge_hub||[]).push([[2155],{3128:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var t=a(5893),s=a(1151);const i={sidebar_position:2,title:"Metadata Backup",tags:["Managment","Environment","Backup"]},o=void 0,r={id:"Management/02_06_Environments/02_06_02_Metadata_Backup",title:"Metadata Backup",description:"The absence of regular metadata backups can lead to serious consequences. If the system is damaged due to human error, a failed release, or an incorrect update, restoring it to a functional state can be difficult or even impossible without a backup. The loss of critical configuration data, such as object settings, business logic, or security rules, can significantly disrupt an entire company and result in substantial reputational and financial losses.",source:"@site/docs/02_Management/02_06_Environments/02_06_02_Metadata_Backup.md",sourceDirName:"02_Management/02_06_Environments",slug:"/Management/02_06_Environments/02_06_02_Metadata_Backup",permalink:"/SFITDelivery-KnowledgeHub/docs/Management/02_06_Environments/02_06_02_Metadata_Backup",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02_Management/02_06_Environments/02_06_02_Metadata_Backup.md",tags:[{label:"Managment",permalink:"/SFITDelivery-KnowledgeHub/docs/tags/managment"},{label:"Environment",permalink:"/SFITDelivery-KnowledgeHub/docs/tags/environment"},{label:"Backup",permalink:"/SFITDelivery-KnowledgeHub/docs/tags/backup"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Metadata Backup",tags:["Managment","Environment","Backup"]},sidebar:"tutorialSidebar",previous:{title:"Environment Monitoring",permalink:"/SFITDelivery-KnowledgeHub/docs/Management/02_06_Environments/02_06_01_Environment_Monitoring"},next:{title:"Data Backup",permalink:"/SFITDelivery-KnowledgeHub/docs/Management/02_06_Environments/02_06_03_Data_Backup"}},l={},c=[{value:"General Information About Metadata",id:"general-information-about-metadata",level:2},{value:"Metadata in Salesforce",id:"metadata-in-salesforce",level:2},{value:"Types of Salesforce Backups and Their Differences",id:"types-of-salesforce-backups-and-their-differences",level:2},{value:"Regular (Automatic) Backup",id:"regular-automatic-backup",level:3},{value:"Pre-Deployment Backup",id:"pre-deployment-backup",level:3},{value:"Full Snapshot",id:"full-snapshot",level:3},{value:"Backup Methods",id:"backup-methods",level:2},{value:"Using Built-In Salesforce Tools",id:"using-built-in-salesforce-tools",level:3},{value:"Automated Solutions and Third-Party Applications",id:"automated-solutions-and-third-party-applications",level:3},{value:"Examples of solutions  for GitLab:",id:"examples-of-solutions--for-gitlab",level:4},{value:"Examples of solutions  for GitHub:",id:"examples-of-solutions--for-github",level:4},{value:"Custom Scripts and Solutions",id:"custom-scripts-and-solutions",level:3},{value:"Conclusion",id:"conclusion",level:2}];function u(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The absence of regular metadata backups can lead to serious consequences. If the system is damaged due to human error, a failed release, or an incorrect update, restoring it to a functional state can be difficult or even impossible without a backup. The loss of critical configuration data, such as object settings, business logic, or security rules, can significantly disrupt an entire company and result in substantial reputational and financial losses."}),"\n",(0,t.jsx)(n.h2,{id:"general-information-about-metadata",children:"General Information About Metadata"}),"\n",(0,t.jsx)(n.p,{children:'Metadata is "data about data" that describes the structure, configuration, and settings of a system. In the context of a CRM platform, metadata influences how fields, objects, business processes, and the user interface are structured. Proper metadata backup and implementation ensure the ability to quickly revert changes and minimize downtime.'}),"\n",(0,t.jsx)(n.h2,{id:"metadata-in-salesforce",children:"Metadata in Salesforce"}),"\n",(0,t.jsx)(n.p,{children:"In Salesforce, metadata encompasses all configuration elements and settings that define the system's behavior:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Object Structure:"})," Standard and custom objects, fields, relationships between objects..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Application Logic:"})," Validation Rules, Workflows, Process Builder processes, Triggers, and Flows..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Interface:"})," Page Layouts, Lightning components, tabs, and applications..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security and Access Control:"})," Profiles, Permission Sets, and Roles..."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Without metadata backups, failures or errors may require restoring configurations from scratch, consuming significantly more time and resources. Additionally, a well-chosen backup method simplifies error investigation when necessary. Implementing version control in a production environment enables quicker identification of incident causes and reduces resolution time."}),"\n",(0,t.jsx)(n.h2,{id:"types-of-salesforce-backups-and-their-differences",children:"Types of Salesforce Backups and Their Differences"}),"\n",(0,t.jsx)(n.h3,{id:"regular-automatic-backup",children:"Regular (Automatic) Backup"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Protection against minor periodic errors made by administrators and managers."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advantages:"})," Allows quick restoration of the configuration to a previous stable state when problems arise."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," Typically automated using scripts or third-party solutions that schedule backups (daily/weekly)."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pre-deployment-backup",children:"Pre-Deployment Backup"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," A safeguard before a release or major update."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advantages:"})," Enables quick rollback if deployment issues occur."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," Performed manually or automatically as part of the CI/CD pipeline right before deploying a new version to production."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"full-snapshot",children:"Full Snapshot"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Long-term archiving and analysis of historical system versions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advantages:"})," Allows restoring the system to a specific date, which is useful for audits and regulatory requirements."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," Conducted less frequently (e.g., quarterly or at key milestones) and involves copying the entire configuration."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"backup-methods",children:"Backup Methods"}),"\n",(0,t.jsx)(n.h3,{id:"using-built-in-salesforce-tools",children:"Using Built-In Salesforce Tools"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Salesforce CLI"})," enables automation of metadata retrieval and deployment. These tools integrate well into CI/CD processes, helping manage configuration versions centrally and simplifying team collaboration.\n",(0,t.jsx)(n.strong,{children:"Example Code (Salesforce CLI) for Retrieving Metadata Using a Manifest:"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sf project retrieve start \\\n  --manifest path/to/package.xml \\\n  --target-org my-org\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"--target-org my-org"})," \u2014 The username or alias of the target org from which metadata is retrieved."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"--manifest path/to/package.xml"})," \u2014 The file path for the manifest (package.xml) specifying the components to retrieve."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example manifest (package.xml):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<Package xmlns="http://soap.sforce.com/2006/04/metadata">\n    <types>\n        <members>Account</members>\n        <members>Sales_Support__c</members>\n        <members>Lead_Default__mdt</members>\n        <name>CustomObject</name>\n    </types>\n    <types>\n        <members>*</members>\n        <name>Layout</name>\n    </types>\n    <types>\n        <members>AdminPermissions</members>\n        <members>UserPermissions</members>\n        <name>PermissionSet</name>\n    </types>\n    <version>62.0</version>\n</Package>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"automated-solutions-and-third-party-applications",children:"Automated Solutions and Third-Party Applications"}),"\n",(0,t.jsx)(n.p,{children:"Several ready-made solutions simplify metadata backups. Examples include Own, Gearset, Flosum, AutoRABIT, Blue Canvas, and others. These tools can:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Schedule backups (daily, weekly, etc.)."}),"\n",(0,t.jsx)(n.li,{children:"Restore individual metadata elements."}),"\n",(0,t.jsx)(n.li,{children:"Send notifications and logs to administrators."}),"\n",(0,t.jsx)(n.li,{children:"Manage version storage and rollback options."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Such applications streamline backup processes without requiring manual scripting, which is particularly useful for smaller teams."}),"\n",(0,t.jsx)(n.h4,{id:"examples-of-solutions--for-gitlab",children:"Examples of solutions  for GitLab:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-YML",children:'# Perform the initial setup:\n# - set the variable GITLAB_ACCESS_TOKEN in the CI/CD variables\n# - set the variable AUTH_LINK in the CI/CD variables (you can obtain this variable using the command: "sf org display -o MyOrg --verbose" )\n# - in the "git push" command, replace the URL with your project\'s URL\n# - in the example, retrieval is done using package.xml, but you can modify it as needed.\n\nimage: salesforce/salesforcedx:7.209.6-slim  # Use the official Salesforce CLI Docker container\nstages:\n  - backup\n\n# Global environment variables (configured in GitLab CI/CD settings)\nvariables:\n  SF_ORG: "your-salesforce-alias"  # Alias of your Salesforce organization\n  GIT_USER: "GitLab CI"\n  GIT_EMAIL: "ci@gitlab.com"\n\nbackup_metadata:\n  stage: backup\n  script:\n    - DATE=$(date +\'%Y_%m_%d_%H-%M\') # Automatically generate a date in YYYY_MM_DD format\n    - echo "Authenticating with Salesforce..."\n    - echo $AUTH_LINK > $HOME_OF_SCRIPT/auth_link\n    - sf org login sfdx-url --sfdx-url-file $HOME_OF_SCRIPT/auth_link --alias my-org\n    \n    # Retrieve metadata from the Salesforce org\n    - echo "Retrieving metadata..."\n    - sf project retrieve start -x manifest/package.xml -o my-org\n        \n    # Configure Git for committing changes\n    - echo "Configuring Git..."\n    - git config --global user.email "$GIT_EMAIL"\n    - git config --global user.name "$GIT_USER"\n    \n    # Ensure we are on the correct branch before committing\n    - echo "Checking out main branch..."\n    - git checkout main || git checkout -b main\n\n    # Add and commit changes with the backup date\n    # Check for changes before committing\n    - echo "Checking for changes..."\n    - if [ -n "$(git status --porcelain)" ]; then\n        echo "Changes detected, committing...";\n        git add .;\n        git commit -m "Backup metadata $DATE";     \n        git push https://oauth2:$GITLAB_ACCESS_TOKEN@gitlab.com/d2269/backup.git main; \n      else\n        echo "No changes detected, skipping commit.";\n      fi\n\n  rules:\n    - if: \'$CI_PIPELINE_SOURCE == "schedule"\'  # Runs automatically if scheduled\n    - if: \'$CI_PIPELINE_SOURCE == "web"\'       # Allows manual trigger via GitLab UI\n      when: manual  # Enables the "Play" button\n'})}),"\n",(0,t.jsx)(n.h4,{id:"examples-of-solutions--for-github",children:"Examples of solutions  for GitHub:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-YML",children:'# Perform the initial setup:\n# - GITHUB_ACCESS_TOKEN \u2013 GitHub Personal Access Token (PAT) with repo permissions\n# - AUTH_LINK \u2013 Authentication output link (sf org display -o MyOrg --verbose command)\n# - in the example, retrieval is done using package.xml, but you can modify it as needed\n# - in the "git push" command, replace the URL with your project\'s URL\n\nname: Salesforce Metadata Backup\n\non:\n  schedule:\n    - cron: "0 3 * * *"  # Run daily at 03:00 UTC\n  workflow_dispatch:  # Allows manual execution via GitHub Actions UI\n\njobs:\n  backup:\n    runs-on: ubuntu-latest\n    container: salesforce/salesforcedx:7.209.6-slim\n\n    env:\n      SF_ORG: "your-salesforce-alias"\n      GIT_USER: "GitHub Actions"\n      GIT_EMAIL: "actions@github.com"\n      HOME_OF_SCRIPT: "/home/runner"\n\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v4\n\n      - name: Set Commit Date\n        run: echo "BACKUP_DATE=$(date +\'%Y_%m_%d_%H-%M\')" >> $GITHUB_ENV\n\n      - name: Authenticate with Salesforce\n        run: |\n          echo "$AUTH_LINK" > $HOME/auth_link  # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c $HOME \u0432\u043c\u0435\u0441\u0442\u043e $HOME_OF_SCRIPT\n          sf org login sfdx-url --sfdx-url-file $HOME/auth_link --alias my-org\n        env:\n          AUTH_LINK: ${{ secrets.AUTH_LINK }}\n\n      - name: Retrieve Salesforce Metadata\n        run: |\n          echo "Retrieving metadata..."\n          sf project retrieve start -x manifest/package.xml -o my-org\n\n      - name: Configure Git\n        run: |\n          git config --global user.email "$GIT_EMAIL"\n          git config --global user.name "$GIT_USER"\n\n      - name: Mark repository as safe\n        run: git config --global --add safe.directory /__w/backup_sf/backup_sf\n  \n      - name: Check for Changes\n        id: check_changes\n        run: |\n          if [ -n "$(git status --porcelain)" ]; then\n            echo "CHANGES=true" >> $GITHUB_ENV\n          else\n            echo "CHANGES=false" >> $GITHUB_ENV\n          fi\n\n      - name: Commit and Push Changes\n        if: env.CHANGES == \'true\'\n        run: |\n          git add .\n          git commit -m "Backup metadata ${{ env.BACKUP_DATE }}"\n          git push https://oauth2:${{ secrets.TOKEN }}@github.com/d2269/backup.git main\n'})}),"\n",(0,t.jsx)(n.h3,{id:"custom-scripts-and-solutions",children:"Custom Scripts and Solutions"}),"\n",(0,t.jsx)(n.p,{children:"Organizations with programming expertise and complex requirements may develop custom scripts. Typically, these:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Run on a schedule (via a CI/CD system or task scheduler)."}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"Salesforce CLI"})," to retrieve metadata."]}),"\n",(0,t.jsx)(n.li,{children:"Store and manage versions using Git."}),"\n",(0,t.jsx)(n.li,{children:"Notify the team or administrators of success or failure."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This approach requires more development and maintenance resources but provides maximum flexibility."}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"Metadata backup is a fundamental aspect of Salesforce project management. It protects against errors and failures and ensures that, in the event of a failed release or misconfiguration, the system can be quickly restored. Key takeaways:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Regularity"})," \u2013 Set up automatic backups to always have the latest configuration version available."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security"})," \u2013 Store metadata in a secure repository (e.g., Git) and restrict access."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalability"})," \u2013 Using CI/CD and ready-made tools simplifies integrating backups into the overall development and release process."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Completeness"})," \u2013 It is essential to back up not only data but the entire configuration (profiles, page layouts, business logic, etc.)."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>r,a:()=>o});var t=a(7294);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);